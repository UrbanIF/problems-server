/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, vendor/assets/stylesheets,
 * or vendor/assets/stylesheets of plugins, if any, can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the top of the
 * compiled file, but it's generally better to create a new file per style scope.
 *
 *= require_self
 */


// This import applies a global reset to any page that imports this stylesheet.
@import "blueprint/reset";

// To configure blueprint, edit the partials/base.sass file.
@import "partials/base";

// Import all the default blueprint modules so that we can access their mixins.
@import "blueprint";

// Import the non-default scaffolding module.
@import "blueprint/scaffolding";

@import "compass/layout/sticky-footer";

@import "icons/*.png";

@include sticky-footer(110px, "#main", "#footer_push", "#footer");
// To generate css equivalent to the blueprint css but with your
// configuration applied, uncomment:
// @include blueprint

// If you are doing a lot of stylesheet concatenation, it is suggested
// that you scope your blueprint styles, so that you can better control
// what pages use blueprint when stylesheets are concatenated together.
body.bp {
  @include blueprint-typography(true);
  @include blueprint-utilities;
  @include blueprint-debug;
  @include blueprint-interaction;

  // Remove the scaffolding when you're ready to start doing visual design.
  // Or leave it in if you're happy with how blueprint looks out-of-the-box
}

form.bp {
  @include blueprint-form;
  // You'll probably want to remove the scaffolding once you start styling your site.
  @include blueprint-scaffolding;
}

body {
  font-family: 'Open Sans';
  color: #667b97;
  font-size: 14px;
}

a {
  text-decoration: none;
  font-weight: bold;
  color: #667b97;
}

a.button {
  font-size: 14px;
  color: #ffffff;
  padding: 3px 36px 3px 38px;
  position: relative;
  display: inline-block;
  &.gray {
    background-color: #667b97;
    border-bottom: 5px solid #32445c;
    &:hover {
      background-color: #607591;
    }
  }
  &.red {
    background-color: #fd7f7f;
    border-bottom: 5px solid #d62929;
    &:hover {
      background-color: #ff5656;
    }
  }
  &.fixed {
    width: 107px;
    padding-left: 0;
    padding-right: 0;
  }
  &:hover {
    top: 2px;
    border-bottom-width: 3px;
  }
}

// Page layout can be done using mixins applied to your semantic classes and IDs:

header {
  background-color: #feffe1;
  height: 65px;
  padding-top: 40px;
  -webkit-box-shadow: inset 0 -3px 3px -4px rgba(0, 0, 0, 0.4);
  box-shadow: inset 0 -3px 3px -4px rgba(0, 0, 0, 0.4);
  .header-content {
    @include container;
    overflow: visible;
    a {
      &.active {
        color: #32445c;
      }
      font-weight: bold;
    }
    nav {
      a:first-child {
        margin-left: 0;
      }
      a {
        font-size: 18px;
        &:hover {
          color: #32445c;
        }
        &:before {
          content: '';
          display: inline-block;
          margin-right: 6px;
        }
        margin-right: 30px;
        margin-left: 30px;
      }
      a.home {
        &:before {
          @include icons-sprite(home);
          @include icons-sprite-dimensions(home);
        }
        &:hover:before, &.active:before {
          @include icons-sprite(home_active);
        }
      }
      a.map {
        &:before {
          @include icons-sprite(map);
          @include icons-sprite-dimensions(map);
          margin-bottom: -1px;
        }
        &:hover:before, &.active:before {
          @include icons-sprite(map_active);
        }
      }
      a.about {
        &:before {
          @include icons-sprite(about);
          @include icons-sprite-dimensions(about);
        }
        &:hover:before, &.active:before {
          @include icons-sprite(about_active);
        }
      }
      float: left;
    }
    .login {
      float: right;
    }
  }
}

.container{
  @include container;
  padding: 60px 0;
  font-weight: 300;
  h1 {
    color: #ff5656;
    font-size: 60px;
    line-height: 52px;
    &.blue {
      color: #7cd5c9;
    }
  }
  .upper {
    text-transform: uppercase;
  }
  .text {
    font-size: 14px;
    line-height: 14px;
  }

  p.text {
    margin: 35px 0 75px 0;
  }
}

.child-block {
  @include column(floor($blueprint-grid-columns / 3));
  color: #667b97;
  .title {
    font-family: Impact;
    font-size: 20px;
    float: left;
    width: 155px;
  }
  .count {
    float: left;
    font-size: 48px;
    line-height: 44px;
  }
}
.child-block:last-child {
  @include column(floor($blueprint-grid-columns / 3), true);
}

.container-guide {
  background-color: #f7f2f2;
  box-shadow: 0 0 25px -20px #000000 inset;
  .child-block {
    text-align: center;
  }
  .image-place {
    margin-top: 40px;
    width: 310px;
    height: 238px;
    &.image-1 {
      background: url(asset-path('pictures/1.png', image)) no-repeat;
    }
    &.image-2 {
      background: url(asset-path('pictures/2.png', image)) no-repeat;
    }
    &.image-3 {
      background: url(asset-path('pictures/3.png', image)) no-repeat;
    }
  }
  .description {
    line-height: 50px;
    .title {
      width: auto;
      float: none;
    }
    .details {
      text-decoration: underline;
    }
  }
}

.categories {
  margin-top: 60px;
  .category-block {
    position: relative;
    border: 10px solid #f7f2f2;
    display: inline-block;
    height: 210px;
    margin: 2px 3px 6px;
    overflow: hidden;
    padding: 0;
    vertical-align: top;
    width: 210px;
    text-align: center;
    .icon {
      height: 32px;
      left: 90px;
      position: absolute;
      top: 68px;
      width: 32px;
      z-index: -1;
      background-color: #667b97;
    }
    .category-link {
      font-weight: 300;
      line-height: 250px;
      display: block;
      height: 100%;
    }
  }
}

#content-container {
  // Two thirds of the grid columns, rounding up.
  // With 24 cols, this is 16.
  $content-columns: ceil(2 * $blueprint-grid-columns / 3);
  // true means it's the last column in the row
  @include column($content-columns, true);
}

footer {
  height: 110px;
  background-color: #feffe1;
  -webkit-box-shadow: inset 0 -3px 3px -4px rgba(0, 0, 0, 0.4);
  box-shadow: inset 0 3px 3px -4px rgba(0, 0, 0, 0.4);
  text-align: center;
  .button.up {
    margin-top: 42px;
    font-size: 20px;
    line-height: 20px;
  }
}